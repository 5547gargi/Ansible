1. Go to project location and create roles directory
   mkdir roles
2. Navigate to roles directory and create a directory structure in the name of httpd
   ansible-galaxy init httpd --offline 
   *here we are giving --offline option as to avoid the downloading the httpd directory structure or role from online if it is available in your ansible galaxy.
   -Role httpd was created successfully :- will promt in your terminal
   httpd
   |--defaults    
   |  |__main.yml *used to define default variables; this is having least priority in comparison to vars directory. 
   |--files       *sometimes using copy module we copy a src file to manage nodes (static files) that file we can keep here; for which no need to mention the complete path for the file in the playbook
   |--handlers    
   |  |__main.yml  *handlers logics we can write inside main.yml file
   |--meta         
   |  |__main.yml *to give some info about the auther/role we can keep hee.
   |--README.md   *some required descriptions we can keep here 
   |--tasks        
   |  |__main.yml  *here we can keep all the required tasks
   |--templets    *To create dynamic content we are using jinja templates; those files we can keep here. 
   |--tests       * To create some test cases we can use this directory.
   |  |__inventory
   |  |__test.yml
   |--vars        *we can define variables here; this is having highest priority than defaults directory
      |__main.yml
3.vi httpd/vars/main.yml
  ---
  # vars file for httpd
  packageName:
      RedHat: httpd
      Debian: apache2
4.vi httpd/tasks/main.yml
  ---
  # tasks file for httpd
  - name: Installing package on RHEL Family
       ansible.builtin.yum:
         name: "{{packageName.get(ansible_facts.os_family)}}"
         state: present
         update_cache: true
       When: ansible_facts.os_family == "RedHat"
     - name: Installing package on Debian Family
       ansible.builtin.apt:
          name: "{{packageName.get(ansible_facts.os_family)}}"
          state: present
          update_cache: true
       when: ansible_facts.os_family == "Debian"
     - name: Copying the index.html file to /var/www/html/index.html
       template: 
         src: index.j2
         dest: /var/www/html/index.html
       notify: Restart Webserver
5. vi httpd/handlers/main.yml
   ---
   # handlers file for httpd
     - name: Restart Webserver
         ansible.builtin.service:
             name: "{{packageName.get(ansible_facts.os_family)}}"
             state: restarted
6. ansible-plybook installhttpdusingroles.yml

*Different locations for roles:-
> ./roles has the highest precedence 
> ~/.ansible/roles is fetced after that if roles are not in current directory where the playbook is being triggered.
> /etc/ansible/roles is being fetced at last.

*We can reuse roles for other playbooks if required.